<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>动态数据绑定（二）</title>
</head>

<body>
    <script>
    function Observer(data) {
        this.data = data;
        this.convert(data);
        }
    var pro=Observer.prototype;
    pro.convert = function(obj) {
            var val;
            for (var key in obj) {
                if (obj.hasOwnProperty(key)) {
                    val = obj[key];
                    if (typeof val === 'object') {
                        new Observer(val);
                    }
                    this.setVaule(key, val);
                }
            }
        }
    pro.setVaule = function(key, val) {
            Object.defineProperty(this.data, key, {
                enumerable: true,
                configurable: true,
                get: function() {
                    console.log('你访问了' + key);
                    return val;
                },
                set: function(newVal) {
                    if(typeof newVal === 'object') {
                        new Observer(newVal);
                    }
                    console.log('你设置了' + key + '，新的值为' + newVal);
                    val = newVal;
                }
            })
        }
    pro.$watch = function(key, val) {
        Object.defineProperty(this.data, key, {
            enumerable: true,
            configurable: true,
            set: val
            })
        }
    var app1 = new Observer({
         name: 'youngwind',
         age: 25
 });

 app1.data.name = {
         lastName: 'liang',
         firstName: 'shaofeng'
 };
 app1.data.name.lastName;
 // 这里还需要输出 '你访问了 lastName '
 app1.data.name.firstName = 'lalala';
 // 这里还需要输出 '你设置了firstName, 新的值为 lalala'
 
 app1.$watch('age', function(age) {
         console.log(`我的年纪变了，现在已经是${age}岁了`)
 });
 app1.data.age = 100; // 输出：'我的年纪变了，现在已经是100岁了'
   </script>
</body>

</html>
